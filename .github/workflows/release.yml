name: Release-Disabled

permissions:
  contents: write
  actions: read
  packages: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.9)'
        required: true
        default: 'v0.1.9'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Windows
        run: npm run make

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            out/make/squirrel.windows/x64/*.exe
            out/make/squirrel.windows/x64/*.nupkg
            out/make/squirrel.windows/x64/RELEASES

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build macOS x64
        run: npm run make -- --platform=darwin --arch=x64

      - name: Build macOS ARM64
        run: npm run make -- --platform=darwin --arch=arm64

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: out/make/*.dmg

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./windows-build

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./macos-build

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "version_number=${{ github.event.inputs.version }}" | sed 's/v//' >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "version_number=${GITHUB_REF#refs/tags/}" | sed 's/v//' >> $GITHUB_OUTPUT
          fi

      - name: List all artifacts
        run: |
          echo "Listing Windows build files:"
          find ./windows-build -name "*" -type f
          echo "Listing macOS build files:"
          find ./macos-build -name "*" -type f

      - name: Find and rename files
        run: |
          # Find and rename Windows file
          WINDOWS_FILE=$(find ./windows-build -name "*.exe" -type f | head -1)
          if [ -n "$WINDOWS_FILE" ]; then
            cp "$WINDOWS_FILE" ./buddy-setup.exe
            echo "Windows file ready: buddy-setup.exe"
          fi
          
          # Find and rename macOS files
          MACOS_X64_FILE=$(find ./macos-build -name "*x64*.dmg" -o -name "*darwin*.dmg" | head -1)
          MACOS_ARM64_FILE=$(find ./macos-build -name "*arm64*.dmg" | head -1)
          
          if [ -n "$MACOS_X64_FILE" ]; then
            cp "$MACOS_X64_FILE" ./buddy-mac-x64.dmg
            echo "macOS x64 file ready: buddy-mac-x64.dmg"
          fi
          
          if [ -n "$MACOS_ARM64_FILE" ]; then
            cp "$MACOS_ARM64_FILE" ./buddy-mac-arm64.dmg
            echo "macOS ARM64 file ready: buddy-mac-arm64.dmg"
          fi
          
          # List final files
          ls -la *.exe *.dmg 2>/dev/null || echo "Some files might be missing"

      - name: Create release notes
        run: |
          cat > release-notes.md << 'EOF'
          ## Buddy Desktop ${{ steps.get_version.outputs.version }}
          
          ### Downloads
          - **Windows**: Download `buddy-setup.exe` for Windows 10/11 (x64)
          - **macOS Intel**: Download `buddy-mac-x64.dmg` for Intel Macs  
          - **macOS Apple Silicon**: Download `buddy-mac-arm64.dmg` for M1/M2/M3 Macs
          
          ### Installation
          - **Windows**: Run the setup.exe file and follow the installation wizard
          - **macOS**: Open the .dmg file and drag Buddy to Applications folder
          
          ### What's New
          - Bug fixes and improvements
          - Enhanced performance
          
          ---
          *This release contains compiled binaries only. Source code is protected.*
          EOF

      - name: Create Release with GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create the release with files
          FILES=""
          [ -f "buddy-setup.exe" ] && FILES="$FILES buddy-setup.exe"
          [ -f "buddy-mac-x64.dmg" ] && FILES="$FILES buddy-mac-x64.dmg" 
          [ -f "buddy-mac-arm64.dmg" ] && FILES="$FILES buddy-mac-arm64.dmg"
          
          gh release create ${{ steps.get_version.outputs.version }} \
            --title "Buddy Desktop ${{ steps.get_version.outputs.version }}" \
            --notes-file release-notes.md \
            $FILES
